@inject IDialogService DialogService

@if (Inline)
{
    <img src="@Source"
         alt="@Caption"
         title="@Caption"
         loading="lazy" />
}
else
{
    <MudButton Class="pa-0 mud-elevation-1"
               Style="overflow: hidden; "
               FullWidth="true"
               DisableRipple="true"
               OnClick="OnClick">
        <img src="@Source" 
             alt="@Caption"
             title="@Caption"
             loading="lazy"
             @onload="@(() => _isLoading = false)"
             style="height: 100%;
                    max-height: @MaxHeight;
                    width: 100%;
                    max-width: @MaxWidth;
                    object-fit: cover;
                    object-position: center" />

        <MudOverlay Visible="@_isLoading" Absolute="true" DarkBackground="true">
            <MudProgressCircular Indeterminate="true"></MudProgressCircular>
        </MudOverlay>
    </MudButton>
}



@code {
    [EditorRequired]
    [Parameter]
    public string? Source { get; set; }

    [EditorRequired]
    [Parameter]
    public string? Caption { get; set; }

    [Parameter]
    public string? Description { get; set; }

    [Parameter]
    public bool Inline { get; set; } = false;

    [Parameter]
    public string Height { get; set; } = "fit-content";

    [Parameter]
    public string MaxHeight { get; set; } = "100%";

    [Parameter]
    public string Width { get; set; } = "fit-content";

    [Parameter]
    public string MaxWidth { get; set; } = "100%";

    private bool _isLoading = true;

    private void OnClick()
    {
        var parameters = new DialogParameters();
        parameters.Add("Source", Source);
        parameters.Add("Caption", Caption);
        parameters.Add("Description", Description);

        var options = new DialogOptions
        {
            MaxWidth=MudBlazor.MaxWidth.ExtraLarge,
            FullWidth = false,
            NoHeader=true
        };

        DialogService.Show<ImageDialog>(Caption, parameters, options);
    }
}