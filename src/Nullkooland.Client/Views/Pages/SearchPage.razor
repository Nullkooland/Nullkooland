@page "/search"
@using Nullkooland.Client.ViewModels.Pages
@inject SearchPageViewModel ViewModel
@inject IThemeService ThemeService

<PageTitle>@ViewModel.PageTitle</PageTitle>

<MudContainer Class="mt-6" MaxWidth="MaxWidth.ExtraLarge">
    <MudTextField Label="Search keywords"
                  Variant="Variant.Outlined"
                  Adornment="Adornment.End"
                  AdornmentIcon="@Icons.Outlined.Search"
                  Immediate="true"
                  @bind-Value="@ViewModel.Keywords"/>

    <MudDivider Class="my-6"/>

    @if (ViewModel.IsLoading)
    {
        <div class="d-flex flex-row justify-center align-center">
            <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true"/>
        </div>
    }
    else
    {
        <MudGrid>
            @foreach ((var post, string keyword, string matchedText) in ViewModel.GetPostsWithMatchedKeyword())
            {
                <MudItem xs="12" lg="6">
                    <MudButton Class="pa-0 pa-xs-0 d-flex flex-row mud-elevation-2"
                               Style="height: 25vh; overflow: hidden; text-transform: none"
                               Link="@post.Url">
                        <div class="pa-4 d-flex flex-column align-start"
                             style="height: 25vh; width: 60%; background-color: var(--mud-palette-surface)">
                            <MudLink Typo="Typo.subtitle1" Href="@post.Url">
                                <MudHighlighter Class="mud-error-text" Style="font-size: x-large; background-color: transparent; font-weight:bold"
                                                Text="@post.Title" HighlightedText="@keyword"/>
                            </MudLink>
                            
                            <div class="mt-4">
                                <MudHighlighter Class="mud-error-text d-inline-block" 
                                                Style="background-color:transparent; font-weight:bold;"
                                                Text="@matchedText" HighlightedText="@keyword"/>
                            </div>

                            <div class="mt-auto d-flex flex-row align-center">
                                <MudIcon Icon="@Icons.Material.Filled.DateRange" Size="Size.Small"/>
                                <MudText Class="ml-2" Typo="Typo.button">@post.Date.ToString("dddd yyyy-MM-dd")</MudText>
                            </div>
                        </div>

                        <img src="@post.HeaderImagePath" class="ml-auto"
                             style="height: 25vh; width: 40%; object-fit: cover"/>
                    </MudButton>
                </MudItem>
            }
        </MudGrid>
    }

</MudContainer>
<Footer/>

@code
{
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadPostsWithContentAsync();
    }
}